ggplot(aes(x= 1, y =`Total Given`, fill = 'A')) +
geom_violin(show.legend = F) +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = 'dodgerblue') +
labs(title = 'Total Given Violin Plot', x = '') +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
coord_flip()
contributions_m %>%
filter(`Full Name` == name_text, `Form of Transaction` != 'IN KIND') %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
arrange(`Total Given` %>% desc()) %>%
ggplot(aes(x= 1, y =`Total Given`, fill = 'A')) +
geom_violin(show.legend = F) +
geom_boxplot() +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = 'dodgerblue') +
labs(title = 'Total Given Violin Plot', x = '') +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
coord_flip()
contributions_m %>%
filter(`Full Name` == name_text, `Form of Transaction` != 'IN KIND') %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
arrange(`Total Given` %>% desc()) %>%
ggplot(aes(x= 1, y =`Total Given`, fill = 'A')) +
geom_violin(show.legend = F) +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = 'dodgerblue') +
labs(title = 'Total Given Violin Plot', x = '') +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
coord_flip()
contributions_m %>%
filter(`Full Name` == name_text, `Form of Transaction` != 'IN KIND') %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
arrange(`Total Given` %>% desc()) %>%
ggplot(aes(x= 1, y =`Total Given`, fill = 'A')) +
geom_violin(show.legend = F) +
geom_boxplot(width = 0.3) +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = 'dodgerblue') +
labs(title = 'Total Given Violin Plot', x = '') +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
coord_flip()
contributions_m %>%
filter(`Full Name` == name_text, `Form of Transaction` != 'IN KIND') %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
arrange(`Total Given` %>% desc()) %>%
ggplot(aes(x= 1, y =`Total Given`, fill = 'A')) +
geom_violin(show.legend = F) +
geom_boxplot(width = 0.1) +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = 'dodgerblue') +
labs(title = 'Total Given Violin Plot', x = '') +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
coord_flip()
contributions_m %>%
filter(`Full Name` == name_text, `Form of Transaction` != 'IN KIND') %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
arrange(`Total Given` %>% desc()) %>%
ggplot(aes(x= 1, y =`Total Given`, fill = 'A')) +
geom_violin(show.legend = F) +
geom_boxplot(aes(fill = 'B'), width = 0.1) +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = c('dodgerblue', 'grey')) +
labs(title = 'Total Given Violin Plot', x = '') +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
coord_flip()
contributions_m %>%
filter(`Full Name` == name_text, `Form of Transaction` != 'IN KIND') %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
arrange(`Total Given` %>% desc()) %>%
ggplot(aes(x= 1, y =`Total Given`, fill = 'A')) +
geom_violin(show.legend = F) +
geom_boxplot(aes(fill = 'B'), width = 0.1, show.legend = F) +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = c('dodgerblue', 'grey')) +
labs(title = 'Total Given Violin Plot', x = '') +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
coord_flip()
contributions_m %>%
filter(`Full Name` == name_text, `Form of Transaction` != 'IN KIND') %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
arrange(`Total Given` %>% desc()) %>%
ggplot(aes(x= 1, y =`Total Given`, fill = 'A')) +
geom_violin(show.legend = F) +
geom_boxplot(aes(fill = 'B', alpha = 0.6), width = 0.1, show.legend = F) +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = c('dodgerblue', 'grey')) +
labs(title = 'Total Given Violin Plot', x = '') +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
coord_flip()
contributions_m %>%
filter(`Full Name` == name_text, `Form of Transaction` != 'IN KIND') %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
arrange(`Total Given` %>% desc()) %>%
ggplot(aes(x =`Total Given`)) +
geom_histogram(binwidth = 500) +
scale_x_continuous(labels = dollar_format()) +
labs(title = 'Total Given Histogram', x = '')
contributions_m %>%
filter(`Full Name` == name_text, `Form of Transaction` != 'IN KIND') %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
ungroup() %>%
summarize(`Median Contributior Amount` = median(`Total Given`))
contributions_m %>%
filter(year == 2016, !is.na(`Office Sought`)) %>%
group_by(`Office Sought`) %>%
summarize(Total = sum(`Transaction Amount`)) %>%
filter(Total > 100000) %>%
ggplot(aes(`Office Sought`, Total, label = dollar_format()(Total))) +
geom_bar(stat = 'identity') +
geom_label() +
coord_flip() +
ggtitle('Total Amount Raised by Office Sought (>$100,000)')
contributions <- read_csv('KREF_Contributions_2014_2017.csv') %>%
mutate(
`Full Name` = pmap_chr(list(`First Name`, `Middle Name`, Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
})
)
contributions <- read_csv('KREF_Contributions_2014_2017.csv') %>%
mutate(
`Full Name` = pmap_chr(list(`First Name`, `Middle Name`, Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
})
)
library(tidyverse)
contributions <- read_csv('KREF_Contributions_2014_2017.csv') %>%
mutate(
`Full Name` = pmap_chr(list(`First Name`, `Middle Name`, Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
})
)
contributions <- read_csv('KREF_Contributions_2014_2017.csv') %>%
mutate(`Full Name` = pmap_chr(list(`First Name`, `Middle Name`, Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
})
)
contributions <- read_csv('KREF_Contributions_2014_2017.csv')
contributions %>%
mutate(`Full Name` = pmap_chr(list(`First Name`, `Middle Name`, Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
}))
contributions %>%
mutate( full_name = pmap_chr(list(`First Name`, `Middle Name`, Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
}))
contributions %>%
mutate(full_name = pmap_chr(list(`First Name`, `Middle Name`, `Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
}))
contributions <- read_csv('KREF_Contributions_2014_2017.csv')  %>%
mutate(full_name = pmap_chr(list(`First Name`, `Middle Name`, `Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
}))
contributions <- read_csv('KREF_Contributions_2014_2017.csv')  %>%
mutate(full_name = pmap_chr(list(`First Name`, `Middle Name`, `Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
})) %>%
filter(!is.na(`Election Date`))
contributions$`Election Date` %>% unique()
?month()
month(contributions$`Election Date`)
month(contributions$`Election Date` %>% anytime())
contributions <- read_csv('KREF_Contributions_2014_2017.csv')%>%
filter(!is.na(`Election Date`))  %>%
mutate(
full_name = pmap_chr(list(`First Name`, `Middle Name`, `Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
}),
`Election Date` = anytime(`Election Date`))
contributions <- read_csv('KREF_Contributions_2014_2017.csv')%>%
filter(!is.na(`Election Date`))  %>%
mutate(
full_name = pmap_chr(list(`First Name`, `Middle Name`, `Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
}),
`Election Date` = anytime(`Election Date`),
election_type = map_chr(`Election Date`, function(i){
mon <- month(i)
if(mon == 5) 'Primary'
else if(mon == 11) 'General'
else 'Special'
})
)
contributions <- read_csv('KREF_Contributions_2014_2017.csv')%>%
filter(!is.na(`Election Date`))  %>%
mutate(
full_name = pmap_chr(list(`First Name`, `Middle Name`, `Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
}),
`Election Date` = anytime(`Election Date`),
election_type = map_chr(`Election Date`, function(i){
mon <- month(i)
if(mon == 5) 'Primary'
else if(mon == 11) 'General'
else 'Special'
}),
election_year = year(`Election Date`)
)
write_csv(contributions, 'contribution_data_for_app.csv')
contributions <- read_csv('contribution_data_for_app.csv')
library(shinydashboard)
library(shiny)
contributions %>% filter(election_type %in% c('General', 'Primary'))
contributions %>% filter(election_type %in% 'General')
get_candidates <- function(year, type){
contributions %>%
filter(election_year == year, election_type %in% type)
}
get_candidates <- function(year, type){
(contributions %>% filter(election_year == year, election_type %in% type))$full_name %>% unique()
}
get_candidates(2015, c('General', 'Primary'))
get_candidates(2015, c('General'))
get_candidates(2015, 'General')
contributions %>% filter(election_year == 2015) %>% View()
contributions %>% filter(election_year == 2016) %>% View()
contributions %>% filter(election_year == 2016) %>% select(`Office Sought`) %>% unique() %>% View()
contributions$`Form of Transaction` %>% unique()
get_frame <- function(candidate, year, type, in_kind = T){
if(in_kind == F) kind <- c('MONETARY')
else kind <- c('MONETARY', 'IN KIND')
contributions %>%
filter(full_name == candidate, election_year == year, election_type %in% type, `Form of Transaction` %in% kind)
}
get_frame('MCKENZIE CANTRELL', 2016, c('General', 'Primary'))
get_frame('MCKENZIE CANTRELL', 2016, c('General', 'Primary'), F)
get_frame(get_candidates(2015)[1], 2015, c('General', 'Primary'), F)
get_candidates(2015)
get_candidates <- function(year){
(contributions %>% filter(election_year == year))$full_name %>% unique()
}
get_frame(get_candidates(2015)[1], 2015, c('General', 'Primary'), F)
get_candidates <- function(year, office){
(contributions %>% filter(election_year == year, `Office Sought` == office))$full_name %>% unique()
}
contributions$election_year %>% unique()
contributions$`Office Sought` %>% unique()
contributions %>% filter(`Office Sought` == 'SLATE') %>% View()
contributions %>% filter(`Office Sought` == 'SLATE') %>% select(full_name) %>% unqiue()View()
contributions %>% filter(`Office Sought` == 'SLATE') %>% select(full_name) %>% unique()View()
contributions %>% filter(`Office Sought` == 'SLATE') %>% select(full_name) %>% unique() %>% View()
contributions %>% filter(`Office Sought` == 'SLATE - STATEWIDE') %>% select(full_name) %>% unique() %>% View()
c_2015 <- read_delim('contributions_2015.csv', delim = ';', col_names = F)
names(c_2015)<-c('Transaction Type','Election Date','Office Sought','Location of Office','Name Prefix','Last Name','First Name','Middle Name','Name Suffix','Party Affiliation','Report Due Date','Statement Type','Name','Address1','Address 2','City','State','Zip','Transaction Category','Form of Transaction','Occupation','Employer','Congressional District','Transaction Amount','Date of Transaction',"Spouse's Name","Spouse's Occupation","Spouse's Employer",'Organization Name','N/A','Transaction Mode')
View(c_2015)
c_2015$`Office Sought` %>% unique()
c_2015$`Location of Office` %>% unique()
contributions <- read_delim('contributions_2014.csv', delim = ';', col_names = F) %>%
rbind(read_delim('contributions_2015.csv', delim = ';', col_names = F)) %>%
rbind(read_delim('contributions_2016.csv', delim = ';', col_names = F)) %>%
rbind(read_delim('contributions_2017.csv', delim = ';', col_names = F)) %>%
filter(X1 != 'BCF', X13 != 'TOTAL', X13 != 'IN-KIND RECD TOTAL')
names(contributions)<-c('Transaction Type','Election Date','Office Sought','Location of Office','Name Prefix','Last Name','First Name','Middle Name','Name Suffix','Party Affiliation','Report Due Date','Statement Type','Name','Address1','Address 2','City','State','Zip','Transaction Category','Form of Transaction','Occupation','Employer','Congressional District','Transaction Amount','Date of Transaction',"Spouse's Name","Spouse's Occupation","Spouse's Employer",'Organization Name','N/A','Transaction Mode')
write_csv(contributions, 'KREF_Contributions_2014_2017.csv')
contributions <- read_csv('KREF_Contributions_2014_2017.csv')%>%
filter(!is.na(`Election Date`))  %>%
mutate(
full_name = pmap_chr(list(`First Name`, `Middle Name`, `Last Name`), function(first,middle,last){
if(is.na(middle)) paste(first, last)
else paste(first, middle, last)
}),
`Election Date` = anytime(`Election Date`),
election_type = map_chr(`Election Date`, function(i){
mon <- month(i)
if(mon == 5) 'Primary'
else if(mon == 11) 'General'
else 'Special'
}),
election_year = year(`Election Date`)
)
write_csv(contributions, 'contribution_data_for_app.csv')
contributions <- read_csv('contribution_data_for_app.csv')
get_candidates(2015,'SLATE')
?uiInput
?uiOutput
contributions$`Office Sought` %>% filter(election_year == 2015)
library(anytime)
library(lubridate)
library(stringr)
library(scales)
library(zoo)
library(treemap)
library(forcats)
library(shinydashboard)
library(shiny)
library(tidyverse)
contributions$`Office Sought` %>% filter(election_year == 2015)
(contributions %>% filter(election_year == 2015))$`Office Sought` %>% unique()
get_offices <- function(year){
(contributions %>% filter(election_year == year))$`Office Sought` %>% unique()
}
df <- get_frame('MATT BEVIN', 2015, c('General', 'Primary', 'Special'))
df
df %>% summarize(`Mean Transaction Amount` = mean(`Transaction Amount`))
df %>% summarize(`Median Transaction Amount` = median(`Transaction Amount`))
bind_cols(
df %>% summarize(`Mean Transaction Amount` = mean(`Transaction Amount`)),
df %>% summarize(`Median Transaction Amount` = median(`Transaction Amount`))
)
df %>%
group_by(Name, `Organization Name`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
arrange(`Total Given` %>% desc()) %>%
ggplot(aes(x= 1, y =`Total Given`, fill = 'A')) +
geom_violin(show.legend = F) +
geom_boxplot(aes(fill = 'B', alpha = 0.6), width = 0.1, show.legend = F) +
scale_y_continuous(labels = dollar_format()) +
scale_fill_manual(values = c('dodgerblue', 'grey')) +
labs(title = 'Total Given Violin Plot', x = '') +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
coord_flip()
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
arrange(`Total Given` %>% desc()) %>%
treemap(index = 'Name', vSize = 'Total Given')
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
treemap(index = 'Name', vSize = 'Total Given')
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`))
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
select(Name, `Total Given`) %>%
arrange(desc(`Total Given`))
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
ungroup() %>%
select(Name, `Total Given`) %>%
arrange(desc(`Total Given`))
df %>%
group_by(Name, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
arrange(desc(`Total Given`))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(d3treeR)
library(anytime)
library(lubridate)
library(stringr)
library(scales)
library(zoo)
library(treemap)
library(forcats)
library(shinydashboard)
library(shiny)
library(d3treeR)
library(tidyverse)
d3tree(
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
treemap(index = 'Name', vSize = 'Total Given')
)
runApp()
runApp()
d3tree(
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
treemap(index = 'Name', vSize = 'Total Given'),
rootname = 'Total Given'
)
runApp()
install.packages('treemapify')
devtools::install_github("wilkox/treemapify")
intsall.packages('ggfittext')
install.packages('ggfittext')
devtools::install_github("wilkox/ggfittext")
install.packages('stringi')
install.packages("stringi")
devtools::install_github("wilkox/ggfittext")
devtools::install_github("wilkox/treemapify")
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`))
library(treemapify)
shiny::runApp()
library(anytime)
library(lubridate)
library(stringr)
library(scales)
library(treemap)
library(forcats)
library(shinydashboard)
library(shiny)
library(treemapify)
library(tidyverse)
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`))
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
ggplot(aes(area = `Total Given`, label = Name)) +
geom_treemap()
?geom_treemap
runApp()
runApp()
runApp()
runApp()
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
ggplot(aes(area = `Total Given`, label = Name)) +
geom_treemap()
library(treemapify)
?treemapify()
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
treemapify(area = `Total Given`)
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
treemapify(area = 'Total Given')
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
treemapify(area = 'Total Given', fill = 'Name')
runApp()
runApp()
df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
treemap(index = 'Name', vSize = 'Total Given')
d3tree(df %>%
group_by(Name, `Organization Name`, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
treemap(index = 'Name', vSize = 'Total Given'))
df$`Transaction Amount` %>% sum()
df$`Transaction Amount` %>% sum() %>% dollar_format()
df$`Transaction Amount` %>% sum() %>% dollar_format()()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df %>%
summarize(`Number of Transactions` = n())
nrow(df)
df %>%
group_by(Name, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`))
df %>%
group_by(Name, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
summarize(`Unique Donors` = n())
df %>%
group_by(Name, `Form of Transaction`) %>%
summarize(`Total Given` = sum(`Transaction Amount`)) %>%
ungroup() %>%
summarize(`Unique Donors` = n())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
